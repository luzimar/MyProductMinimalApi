name: dotnet6-my-product-minimal-api

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NOME_WEBAPP: myproductminimalapi
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USER }}/myproductminimalapi
  CAMINHO_PROJETO_WEBAPP: ./
  CAMINHO_TESTES: ./

jobs:
  build-tests-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build de imagem
      run: |
        cd ${{ env.CAMINHO_PROJETO_WEBAPP }}
        docker build . --file Dockerfile --tag ${{ env.DOCKERHUB_IMAGE }}:latest        
    - name: Criação de container para testes com a API
      run: |
        docker run --name api-testes -p 5000:80 -d ${{ env.DOCKERHUB_IMAGE }}:latest
        docker container ls
    - name: Testes da API REST com Newman
      run: |
        cd ${{ env.CAMINHO_TESTES }}
        newman run MyProductApiCollection_postman_collection.json -d testes.json
    - name: Login no Docker Hub
      uses: docker/login-action@v1.8.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PWD }}
    - name: Geração de tag com número do Build e Push no Docker Hub
      run: |
        docker tag ${{ env.DOCKERHUB_IMAGE }}:latest ${{ env.DOCKERHUB_IMAGE }}:$GITHUB_RUN_NUMBER
        docker push --all-tags ${{ env.DOCKERHUB_IMAGE }}
  deployment-docker-hub:
    needs: [build-tests-push]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PWD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKERHUB_IMAGE }}:latest
            ${{ env.DOCKERHUB_IMAGE }}:${{ github.run_number }}
